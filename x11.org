#+TITLE: X11

* Misc
check the screen resolution:
#+BEGIN_EXAMPLE
xdpyinfo | grep -B 2 resolution
#+END_EXAMPLE

* font
How I made the WenQuanYi Micro Hei ttf font (clx-truetype only recognizes ttf, not ttc):

- input: ttc file
- Tool: fontforge

Open ttc file, select one, generate font, choose truetype
The validation failed, but doesn't matter


* Xrandr
Multiple Display:

#+BEGIN_EXAMPLE
# Mirror display
sudo xrandr --output HDMI-2 --same-as eDP-1
sudo xrandr --output HDMI-2 --off
#+END_EXAMPLE

Rotate
#+BEGIN_EXAMPLE
xrandr --output HDMI-1 --rotate left
#+END_EXAMPLE

Chagne resolution
#+BEGIN_EXAMPLE
xrandr --output HDMI-1 --mode 1920x1080
#+END_EXAMPLE

* Display Manager
Install xdm. It will use the file =$HOME/.xsession=, so
#+BEGIN_EXAMPLE
ln -s $HOME/.xinitrc $HOME/.xsession
#+END_EXAMPLE


* Window Manager
Candidates:
- ratpoison
- dwm
- stumpwm: written in common lisp
- exwm: emacs X window manager

Noop:
- i3: flavor VI, Noop!


** ratpoison

This is actually a wonderful WM.
To start:

#+BEGIN_EXAMPLE
aptitude install ratpoison
#+END_EXAMPLE

In =.xinitrc=:

#+BEGIN_EXAMPLE
exec ratpoison
#+END_EXAMPLE

- =C-t ?= to show the help

actually =C-t= is the prefix of every command, =C-g= to abort.
- =C-t :=: type command
- =C-t !=: run shell command
- =C-t .=: open menu
- =C-t c=: open terminal


HOWEVER, this is pretty old, and it cause the screen to go brighter and darker back and force.
Fortunately the stumpwm is very like this one, but
1. actively maintained on github.
2. written in common lisp

* Theme
** cursor
Install xcursor-themes:
#+BEGIN_EXAMPLE
aptitude install xcursor-themes
aptitude show xcursor-themes # here it will output the themes name
#+END_EXAMPLE

In =.Xresources=:
#+BEGIN_EXAMPLE
Xcursor.theme: redglass
#+END_EXAMPLE

** color
X11 color names: =/etc/X11/rgb.txt=


* Emacs As Window Manager
http://www.howardism.org/Technical/Emacs/new-window-manager.html

#+BEGIN_EXAMPLE
sudo aptitude install xinit
sudo aptitude install emacs
#+END_EXAMPLE


In =.initrc=:
#+BEGIN_EXAMPLE
exec emacs
#+END_EXAMPLE

In emacs configure:
#+BEGIN_EXAMPLE
(set-frame-parameter nil 'fullscreen 'fullboth)
#+END_EXAMPLE

When you need to run something, just =M-x != and call =xterm=.

** A time sink
#+BEGIN_SRC lisp
  (defun setup-windows ()
    "Organize a series of windows for ultimate distraction."
    (interactive)
    (delete-other-windows)

    ;; Start with the Stack Overflow interface
    (sx-tab-frontpage t nil)

    ;; Put IRC on the other side
    (split-window-horizontally)
    (other-window 1)
    (circe-connect-all)

    ;; My RSS Feed goes on top:
    (split-window-vertically)
    (elfeed)

    ;; And start up the Twitter interface above that:
    (other-window 2)
    (split-window-vertically)
    (twit)

    (window-configuration-to-register ?w))
#+END_SRC


* Trouble shooting

On Debian, when I =dist-upgrade= Debian 8 Jessie to 9 Stretch,
the =startx= stop working.
I try install a Debian 9 from its own image, and still the same result.
The error message says:
#+BEGIN_QUOTE
vesa cannot read int vect
screen found but none leave a usable configuration
xf86enableioports failed to set iopl for i/o
#+END_QUOTE

The trick is you need:
#+BEGIN_EXAMPLE
chomd u+s /usr/bin/xinit
#+END_EXAMPLE

* Nvidia Driver

I'm installing the driver for my GTX 1060.
It is a brand new card, the nouveau driver simply does not work.

Install the kernel header:
#+BEGIN_EXAMPLE
linux-headers-`uname -r`
#+END_EXAMPLE

Make sure the =/tmp= has enough space.

After installation, use =nvidia-xconfig= will write =/etc/X11/xorg.conf=.
The original one will be backed up (actually original one is empty).

But, I haven't been able to boot to login page using nvidia card...

* Natural Scrolling

The old solution is to swap the pointer button "4" and "5", by =xmodmap= or =xinput=:

#+BEGIN_EXAMPLE
xmodmap -e "pointer = 1 2 3 4 5"
xinput --set-button-map 10 1 2 3 5 4
#+END_EXAMPLE

The 10 is the id, to find it out, run xinput without argument.

But this way is deprecated, as of chromium 49 and above, it does not work any more.
So use the xinput way to /set the property/:

#+BEGIN_EXAMPLE
xinput set-prop 10 "libinput Natural Scrolling Enabled" 1
#+END_EXAMPLE

I'm using logitech G900 and the property might be different. It works!

Not sure if the xinput command should be run each time the system
boots. That would be hard for specifying ID.

The detail is, you can do this:

#+BEGIN_EXAMPLE
xinput # show a list of devices
xinput list-props <ID> # list of properties
xinput set-prop <deviceID> <propID> <value>
#+END_EXAMPLE
