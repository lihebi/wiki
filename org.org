#+TITLE: Org Mode
#+TAGS: @work @home(h)

* Structure
** Drawer
The heading can have a drawer, meaning it is hidden by default.
Under a headline, use =:DRAWERNAME:= and =:END:= to denote the beginning and end.
=C-c C-x d= also creates drawer easily. If region is active, move the region to a drawer.
** Footnote
Footnote can be of these format:
- =[fn:1] some text=
- =[fn:name]=
- =[fn:: anonymous inline footnote!]=
- =[fn:name: named inline footnote that can be referenced from elsewhere]=
There should be two empty lines after the footnote definition.

=C-c C-x f= inserts a footnote (at the end of page);
=C-c C-c= jump to definition or back to reference;
=C-c '= :: edit the footnote in a seperate buffer.

** Headings
- Moving around ::
  =C-c C-n= :: next heading
  =C-c C-p= :: previous heading
  =C-c C-f= :: next heading same level
  =C-c C-b= :: previous heading same level
  =C-c C-u= :: parent heading
  =C-c C-j= :: jump to some node. Direct type to navigate, and tab to expand.

- Editing ::
  Use the command =org-promote-subtree= and =org-demote-subtree= to adjust the heading level.
  =M-h= marks current tree.
  It is very useful to narrow the subtree using =C-x n s= and widen it back by =C-x n w=.

* Agenda
- Creating :: A =TODO= keyword in the beginning of a heading mark it as a TODO item, or simply =M-S-<RET>= to create one.
- Attributes ::
  You can add a /schedule/ or /deadline/ for such an item,
  by =C-c C-s= and =C-c C-d= respectively.
  Time-stamp is normally inserted =C-c .= inserts or modifies time stamp. It can recognize a variety of format.
  Also, in the interactive calendar and in the org buffer, use =M-<ARROW>= to move.
  An item can have a priority within A to C, set by =C-c ,=.
- Operations ::
  There're a lot of operations on the entries.
  In the org buffer, =C-c t= will rotate TODO state.
  For a list that is not a heading, you can pre-pend the list with =[ ]=, and =C-c C-c= toggles it.
  A task can be clocked.
  Clock in via =C-c C-x C-i= and clock out via =C-c C-x C-o=.
  =C-c ^= can sort the lists, based on many attributes such as todo status, time, priority.
- Agenda View ::
  It is better to view the TODO lists in a dedicated buffer.
  Org keeps the variable =org-agenda-files= for the global agenda files.
  You can add current file by =C-c [=.
  The global agenda has different view method,
  namely =C-c a a= for the week view, =C-c a t= for all todo items, and =C-c a L= for the timeline of current file.
  In side the buffer, =<ENTER>= enter the org file while =<TAB>= display the org file in another window.

  In the agenda view, =d,w,vm,vy=  change the range to day, week, month, year respectively.
  =E= to show the entry text (text inside the heading), =R= show the clock report.
  =s= saves all buffers,  =f=, =b= and =.= go to next, previous week and today respectively.
  
  As always =g= to refresh.
  It is easier to operate in such a buffer: you don't usually need the =C-c= prefix.
  =t= changes TODO status, =,= set the priority, with =+= and =-= to raise or lower it.
  You can still set deadline and schedule using the same binding.
  Clocking in and out becomes =I= and =O=, and cancel with =X=.

* Tags
Tags can be the variable name plus =@= is available.
Every heading can have tags at the end of it. Use =:tag1:tag2:= syntax.
Tags will be inherited by default for the subtrees.
=C-c C-c= :: at the heading, set the tags.

# ** predefined tags
# Put a /unique/ letter for the /fast tag selection/ by just a single keystroke.

# #+BEGIN_SRC elisp
# (setq org-tag-alist '(("@work" . ?w) ("@home" . ?h) ("laptop" . ?l)))
# #+END_SRC

# You can also specify in a file basis:
# #+BEGIN_EXAMPLE
# #+TAGS: @work(w) @home(h)
# #+END_EXAMPLE

# Then =C-c C-c= on this line to "activate" it.

# ** search
# - =C-c / m= :: construct sparse tree based on tag
* Properties
Similar to tags, we can also set the property, the key value pairs.
It is inside the =PROPERTY= drawer. Each line is a property, where key is surrounded with =:=, and value after it.
Property is not inherited by default.

# ** Edit
# Editing properties is done in column view.
# First, you need to define the column format. Add and execute the following line:
# #+BEGIN_EXAMPLE
# #+COLUMNS: %25ITEM %TAGS %PRIORITY %TODO
# #+END_EXAMPLE

# - =C-c C-x C-c= :: toggle the column view
# - =g= :: refresh
# - =q= :: quit
# - =n= :: next allowed value
# - =p= :: previous allowed value
# - =e= :: edit this field
# - =v= :: show the value of the field

# ** search
# Search uses the same =C-c / m=.


* Exporting
** bibliography
Normally you only need:
#+BEGIN_EXAMPLE
bibliographystyle:plain
bibliography:/home/hebi/github/bibliography/hebi/tools.bib
#+END_EXAMPLE

It remains to be seen how to put a set of default bib file instead of specifying this ugly file.

** Latex Exporting
*** doc class & options

 #+begin_example
 #+LATEX_CLASS: fse
 #+OPTIONS: toc:nil author:nil

 #+BIBLIOGRAPHY: slicing plain
 #+INCLUDE: "appendix.org" :minlevel 1
 #+end_example

*** appendix
 #+begin_example
 #+LaTeX: \appendix

 #+INCLUDE: "appendix-todo.org" :minlevel 1
 #+INCLUDE: "appendix-context.org" :minlevel 1
 #+INCLUDE: "appendix-helium-guard.org" :minlevel 1
 #+INCLUDE: "appendix-valgrind-exp.org" :minlevel 1
 #+end_example

*** code listing
#+BEGIN_EXAMPLE
#+ATTR_LATEX: :options frame=shadowbox
#+END_EXAMPLE


** Beamer
The header setup:
#+BEGIN_EXAMPLE
#+STARTUP: beamer
#+AUTHOR: Hebi Li
#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation]
#+BEAMER_THEME: Madrid
#+OPTIONS: H:2 toc:t num:t
#+END_EXAMPLE

The above configuration define "H" to be 2, meaning the frame is the second level heading (=**=).
The top level heading (=*=) can be used to organize the presentation.
To show the current section, add this just /after/ every top level heading.

#+BEGIN_EXAMPLE
#+TOC: headlines [currentsection]
#+END_EXAMPLE

There's an automatic way to add table of contents before each section:
#+BEGIN_EXAMPLE
#+latex_header: \AtBeginSection[]{\begin{frame}<beamer>\frametitle{Topic}\tableofcontents[currentsection]\end{frame}}
#+END_EXAMPLE

The =***= will becomes block.
These blocks can utilize the horizontal space.

#+BEGIN_EXAMPLE
*** Octave code						      :BMCOL:B_block:
    :PROPERTIES:
    :BEAMER_col: 0.45
    :BEAMER_env: block
    :END:
*** The output						      :BMCOL:B_block:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :BEAMER_env: block
    :BEAMER_envargs: <2->
    :END:
#+END_EXAMPLE


* Table
#+begin_example org
#+TBLFM: $4=$2/10
#+TBLFM: $4=$2*100/$3
#+TBLFM: $4=(round $4)
#+end_example
* Image
#+BEGIN_QUOTE
[[./image.jpg]]
#+END_QUOTE
- org-toggle-inline-image
- org-display-inline-image
- org-redisplay-inline-image
- org-remove-inline-image

The width is defined by =org-image-actual-width=
- t: actual width
- 300: 300px

* org-ref
*** Commands
- =C-c ]=: insert citation, typically with helm: =org-ref-helm-insert-cite-link=

**** Navigation in the bib file
- =M-n= :: next entry
- =M-p= :: previous entry

