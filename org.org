#+TITLE: Org Mode
#+TAGS: @work @home(h)

* Structure
** concepts
*** drawer
Under a headline, use =:DRAWERNAME:= and =:END:= to denote the beginning and end. The drawer means it is hidden by default.
- =C-c C-x d= :: create drawer. If region is active, move the region to a drawer.

*** footnote
It can be of these format:
- =[fn:1] some text=
- =[fn:name]=
- =[fn:: anonymous inline footnote!]=
- =[fn:name: named inline footnote that can be referenced from elsewhere]=

it ends at:
- next footnote
- headlines
- two consecutive empty lines

Some command to operate the footnote:
- =C-c C-x f= :: insert a footnote (at the end of page)
- =C-c C-c= :: jump to definition or back to reference
- =C-c '= :: edit the footnote in a seperate buffer

** motion among headings
- =C-c C-n= :: next heading
- =C-c C-p= :: previous heading
- =C-c C-f= :: next heading same level
- =C-c C-b= :: previous heading same level
- =C-c C-u= :: parent heading
- =C-c C-j= :: jump to some node. Direct type to navigate, and tab to expand.

** editing

inserting
- =M-<RET>= :: insert heading /here/
- =C-<RET>= :: insert heading /after current body/

moving
- =M-<left|right>= :: promote & demote
- =M-<up>= :: move subtree up
- =M-<down>= :: move subtree down

marking
- =M-h= :: mark current tree

narrow
- =C-x n s= :: narrow subtree
- =C-x n w= :: widen

** sparse tree
only display content that matters.
- =C-c / r= :: prompt a regular expression. Will show only the heading matching it. 
- =M-g M-n= :: next match
- =M-g M-p= :: previous match

* =TODO= Lists
** create
- =M-S-<RET>= :: insert todo heading /here/
- =C-S-<RET>= :: insert todo heading after body

** operations
- =C-c t= :: rotate TODO state
- =C-c ,= :: set priority
- =C-c C-c= :: toggle a checkbox

** Viewing
- =C-c / t= :: sparse tree for TODO lists
- =C-c a t= :: show the global TODO list =org-todo-list=

** date/time
- =C-c .= :: insert or modify time stamp. In the interactive calendar, use =M-<ARROW>= to move
- =S-<left|right>= :: adjust day

*** inserting deadline
- =C-c C-d= :: insert deadline
- =C-c C-s= :: insert schedule
- =C-c / d= :: check deadlines
- =C-c / b= :: check before a given date
- =C-c / a= :: check after a given date

*** clocking a task
- =C-c C-x C-i= :: start clocking
- =C-c C-x C-o= :: end clocking

** Agenda
=org-agenda-files= variable will record a list of agenda files.
You can add or remove the list by (will modify =init.el=):
- =C-c [= :: add current file to agenda file list
- =C-c ]= :: remove current file from agenda file list

*** Entering
- =C-c a= :: prompt for activation of org-agenda
  - =a= :: calendar
  - =t= :: todo
  - =m= :: matching tags
  - =L= :: timeline

*** commands
Commands in the agenda buffer:

- =n= :: next line
- =p= :: previous
- =<TAB>= :: display the org file in another window
- =<RET>= :: open org file as single window
- =g= :: refresh
- =C-c C-x C-c= :: open column view
- =t= :: change TODO status
- =P= :: display priority of current item
- =+= :: increase priority
- =-= :: decrease priority
- =z= :: add note to the entry
- =C-c C-d= :: add deadline
- =C-c C-s= :: insert schedule
- =I= :: clock in
- =O= :: clock out
- =X= :: clock cancel

* Tags
Tags can be the variable name plus =@= is available.
Every heading can have tags at the end of it. Use =:tag1:tag2:= syntax.
Tags will be inherited by default for the subtrees.

- =C-c C-c= :: at the heading, set the tags

** predefined tags
Put a /unique/ letter for the /fast tag selection/ by just a single keystroke.

#+BEGIN_SRC elisp
(setq org-tag-alist '(("@work" . ?w) ("@home" . ?h) ("laptop" . ?l)))
#+END_SRC

You can also specify in a file basis:
#+BEGIN_EXAMPLE
#+TAGS: @work(w) @home(h)
#+END_EXAMPLE

Then =C-c C-c= on this line to "activate" it.

** search
- =C-c / m= :: construct sparse tree based on tag
* Properties
Similar to tags, we can also set the property, the key value pairs.
It is inside the =PROPERTY= drawer. Each line is a property, where key is surrounded with =:=, and value after it.
Property is not inherited by default.

** Edit
Editing properties is done in column view.
First, you need to define the column format. Add and execute the following line:
#+BEGIN_EXAMPLE
#+COLUMNS: %25ITEM %TAGS %PRIORITY %TODO
#+END_EXAMPLE

- =C-c C-x C-c= :: toggle the column view
- =g= :: refresh
- =q= :: quit
- =n= :: next allowed value
- =p= :: previous allowed value
- =e= :: edit this field
- =v= :: show the value of the field

** search
Search uses the same =C-c / m=.


* Exporting
** bibliography
Normally you only need:
#+BEGIN_EXAMPLE
bibliographystyle:plain
bibliography:/home/hebi/github/bibliography/hebi/tools.bib
#+END_EXAMPLE

It remains to be seen how to put a set of default bib file instead of specifying this ugly file.

** Latex Exporting
*** doc class & options

 #+begin_example
 #+LATEX_CLASS: fse
 #+OPTIONS: toc:nil author:nil

 #+BIBLIOGRAPHY: slicing plain
 #+INCLUDE: "appendix.org" :minlevel 1
 #+end_example

*** appendix
 #+begin_example
 #+LaTeX: \appendix

 #+INCLUDE: "appendix-todo.org" :minlevel 1
 #+INCLUDE: "appendix-context.org" :minlevel 1
 #+INCLUDE: "appendix-helium-guard.org" :minlevel 1
 #+INCLUDE: "appendix-valgrind-exp.org" :minlevel 1
 #+end_example

** Beamer
The header setup:
#+BEGIN_EXAMPLE
#+STARTUP: beamer
#+AUTHOR: Hebi Li
#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [presentation]
#+BEAMER_THEME: Madrid
#+OPTIONS: H:2 toc:t num:t
#+END_EXAMPLE

The above configuration define "H" to be 2, meaning the frame is the second level heading (=**=).
The top level heading (=*=) can be used to organize the presentation.
To show the current section, add this just /after/ every top level heading.

#+BEGIN_EXAMPLE
#+TOC: headlines [currentsection]
#+END_EXAMPLE

* Table
#+begin_example org
#+TBLFM: $4=$2/10
#+TBLFM: $4=$2*100/$3
#+TBLFM: $4=(round $4)
#+end_example

* org-ref
*** Commands
- =C-c ]=: insert citation, typically with helm: =org-ref-helm-insert-cite-link=

**** Navigation in the bib file
- =M-n= :: next entry
- =M-p= :: previous entry

