#+TITLE: Linux

* Installation
On windows, you need =unetbootin=. On linux:

#+BEGIN_EXAMPLE
dd bs=4M if=/path/to/archlinux.iso of=/dev/sdx && sync
# restore
dd count=1 bs=512 if=/dev/zero of=/dev/sdx && sync
#+END_EXAMPLE

On Mac:
#+BEGIN_EXAMPLE
hdiutil convert -format UDRW -o ~/path/to/target.img ~/path/to/ubuntu.iso
diskutil list, insert usb, diskutil list => /dev/disk1
diskutil unmountDisk /dev/diskN
sudo dd if=/path/to/downloaded.img of=/dev/rdiskN bs=1m
diskutil eject /dev/diskN
#+END_EXAMPLE

Create MacOS LiveUSB
#+BEGIN_EXAMPLE
sudo /Applications/Install\ OS\ X\ Mavericks.app/Contents/Resources/createinstallmedia \
--volume /Volumes/Untitled \
--applicationpath /Applications/InstallXXX.app \
--nointeraction
#+END_EXAMPLE

* Network
When using docker container, host system cannot resolve the name of
container to the specific IP. I have to specify it manually. To
resolve a name to IP address, you can add it into
=/etc/hosts=. E.g. at the end of the file, add:

#+BEGIN_EXAMPLE
172.18.0.2 srcml-server-container
#+END_EXAMPLE

In Arch, =ifconfig= is in =net-tools= package, and is deprecated. Use
=ip= instead:

#+begin_example
ip addr show <dev>
ip link # show links
ip link show <dev>
#+end_example

** Wireless Networking

*** General DHCPCD
DHCP is not enabled by default. It is the philloshophy for Arch:
installing a package will not enable any service. Enable it by;

#+BEGIN_EXAMPLE
systemctl enable dhcpcd
#+END_EXAMPLE


*** iw
- iw dev: list dev
- iw dev <interface> link: show status
- ip link set <interface> up: up the interface
- ip link show <interface>: if you see <UP> in the output, the interface is up
- iw dev interface scan: scan for network
- iw dev <interface> connect "SSID": connect to open network

*** wpa_supplicant
=iw= can only connect to public network. This is used to connect
WPA2/WEP encrypted network.

**** Configuration
The config file (e.g. =/etc/wpa_supplicant/example.conf=) can be
generated in two ways: using =wpa_cli= or =use wpa_passphrase=.
=wpa_cli= is interactive, and has commands =scan=, =add_network=,
=save_config=.

#+begin_example
wpa_passphrase MYSSID <passphrase> > /path/to/example.conf
#+end_example

Inside this file, there's a network section. The =ssid= is a quoted
SSID name, while =psk= is unquoted encrypted phrase. The psk can also
be quoted clear password.  If the network is open, you can use
=key_mgmt=NONE= in place of =psk=

**** Connect
#+begin_example
wpa_supplicant -B -i <interface> -c <(wpa_passphrase <MYSSID> <passphrase>)
#+end_example
connect to a WPA/WEP protected network
- -b: fork into background
- -i interface
- -c: path to configuration file. 

Alternatively, you can use the config file
#+begin_example
wpa_supplicant -B -i <interface> -c /path/to/example.conf
#+end_example

**** Obtain IP
After this, you need to get IP address by the "usual" way, e.g.
#+begin_example
dhcpcd <interface>
#+end_example

It seems that we should enable the service:
- wpa_supplicant@<interface>
- dhcpcd@<interface>

Also, dhcpcd has a hook that can launch wpa_supplicant implicitly.

**** To Sum Up
Find the interface by =iw dev=. Say it is =wlp4s0=.

Create config file =/etc/wpa_supplicant/wpa_supplicant-wlp4s0.conf=:

#+begin_example
  network={
          ssid="MYSSID"
          psk="clear passwd"
          psk=fjiewjilajdsf8345j38osfj
  }

  network={
          ssid="2NDSSID"
          key_mgmt=NONE
  }
#+end_example

Enable =wpa_supplicant@wlp4s0= and =dhcpcd@wlp4s0= (or just =dhcpcd=)


To change another wifi, kill the server and use another one
#+begin_example
sudo killall wpa_supplicant
wpa_supplicant -B -i wlp4s0 -c /path/to/wifi.conf
#+end_example



** VPN
*** L2tp, IPSec
#+BEGIN_EXAMPLE
apt-get purge "lxc-docker*"
apt-get purge "docker.io*"
apt-get update
apt-get install apt-transport-https ca-certificates gnupg2
sudo apt-key adv \
       --keyserver hkp://ha.pool.sks-keyservers.net:80 \
       --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

#+END_EXAMPLE

#+BEGIN_EXAMPLE
deb https://apt.dockerproject.org/repo debian-jessie main
#+END_EXAMPLE

#+BEGIN_EXAMPLE
apt-get update
apt-cache policy docker-engine
apt-get update
apt-get install docker-engine
service docker start
docker run hello-world

#+END_EXAMPLE

https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients.md
https://hub.docker.com/r/fcojean/l2tp-ipsec-vpn-server/

#+BEGIN_EXAMPLE
docker pull fcojean/l2tp-ipsec-vpn-server

#+END_EXAMPLE

vpn.env

#+BEGIN_EXAMPLE
VPN_IPSEC_PSK=<IPsec pre-shared key>
VPN_USER_CREDENTIAL_LIST=[{"login":"userTest1","password":"test1"},{"login":"userTest2","password":"test2"}]
#+END_EXAMPLE

#+BEGIN_EXAMPLE
modprobe af_key
docker run \
    --name l2tp-ipsec-vpn-server \
    --env-file ./vpn.env \
    -p 500:500/udp \
    -p 4500:4500/udp \
    -v /lib/modules:/lib/modules:ro \
    -d --privileged \
    fcojean/l2tp-ipsec-vpn-server
#+END_EXAMPLE

#+BEGIN_EXAMPLE
docker logs l2tp-ipsec-vpn-server
docker exec -it l2tp-ipsec-vpn-server ipsec status
#+END_EXAMPLE

*** OpenVPN

**** Server Setup
https://github.com/kylemanna/docker-openvpn
It is very interesting to use docker this way.

The persisit is the storage, which is mounted on /etc/openvpn, serving
as the configuration.  Each time, create a new docker container
mounting the same storage. Each step write to the configuration.

#+BEGIN_EXAMPLE
OVPN_DATA="ovpn-data-example"
docker volume create --name $OVPN_DATA
docker run -v $OVPN_DATA:/etc/openvpn --rm kylemanna/openvpn ovpn_genconfig -u udp://VPN.SERVERNAME.COM
docker run -v $OVPN_DATA:/etc/openvpn --rm -it kylemanna/openvpn ovpn_initpki
#+END_EXAMPLE

It is easy to run the server itself. This time use -d option to make
it a daemon.
#+BEGIN_EXAMPLE
docker run -v $OVPN_DATA:/etc/openvpn -d -p 1194:1194/udp --cap-add=NET_ADMIN kylemanna/openvpn
#+END_EXAMPLE

It is also easy to create certificate on-the-go. For that, create new
container to create and retrieve the certificate.

#+BEGIN_EXAMPLE
docker run -v $OVPN_DATA:/etc/openvpn --rm -it kylemanna/openvpn easyrsa build-client-full CLIENTNAME nopass
docker run -v $OVPN_DATA:/etc/openvpn --rm kylemanna/openvpn ovpn_getclient CLIENTNAME > CLIENTNAME.ovpn
#+END_EXAMPLE

**** Client Setup
On arch, copy hebi.ovpn to /etc/openvpn/client/hebi.conf. Then the
service openvpn-client@hebi will be available for systemd. On ubuntu,
the path is /etc/openvpn/hebi.conf, with service openvpn@hebi.
Start the service will forward traffic.

It is likely that you can connect, can ping any IP address, but cannot
resolve names. You can even use =drill @8.8.8.8 google.com= to resolve
the name on the way.

The trick is to push resolv conf of local machine to remote. First
install =openresolv= and (aur) =openvpn-update-resolv-conf=. Add the
following to the end of hebi.conf file:

#+BEGIN_EXAMPLE
script-security 2
up /etc/openvpn/update-resolv-conf
down /etc/openvpn/update-resolv-conf
#+END_EXAMPLE

For ubuntu the openvpn package already contains the file. Just modify
the conf file.


* App

** mplayer
Interactive controls:
- Forward/Backward: LEFT/RIGHT (10s), UP/DOWN (1m), PGUP/PGDWN (10m)
- Playback speed: =[]= (10%), ={}= (50%), backspace (reset)
- =/*=: volume

When changing the speed, the pitch changed. To disable this, start
mplayer by =mplayer -af scaletempo=.  To stretch the images to full
screen, pass the =-zoom= option when starting.

** youtube-dl
When downloading a playlist, you can make the template to number the
files
#+BEGIN_EXAMPLE
youtube-dl -o "%(playlist_index)s-%(title)s.%(ext)s" <playlist_link>
#+END_EXAMPLE

Download music only:
#+BEGIN_EXAMPLE
youtube-dl --extract-audio --audio-format flac <url>
#+END_EXAMPLE

** chrome extensions
- =html5outliner=: give you a toc of the page. VERY NICE!
- =markdown here= :: render for email
- =unblockyouku=
- =adblock=
- =sight= & =syntaxtic= :: syntax highlighter

** VNC
I use tigervnc because it seems to be fast.

- vncpasswd: set the password
- vncserver&: start the server.
  - It is started in :1 by default, so connect it with
    =vncviewer <ip>:1=
  - On mac, the docker bridge network does not work, so you cannot
    connect to the contianer by IP addr. In this case, map the
    port 5901. 5900+N is the default VNC port.
  - vncserver -kill :1 will kill the vncserver
  - vncserver :2 will open :2

** Remove viewer

The lab machines are accessed via spice. The client for spice is
virt-viewer. It can be installed through package manager. The actual
client is called remote-viewer, which is shipped with virt-viewer. So
the command to connect to the .vv file: =remove-viewer console.vv=.

** mpd
music play daemon

To start:
#+BEGIN_EXAMPLE
mkdir -p ~/.config/mpd
cp /usr/share/doc/mpd/mpdconf.example ~/.config/mpd/mpd.conf
mkdir ~/.mpd/playlists
#+END_EXAMPLE

#+BEGIN_EXAMPLE conf
# Required files
db_file            "~/.mpd/database"
log_file           "~/.mpd/log"

# Optional
music_directory    "~/music"
playlist_directory "~/.mpd/playlists"
pid_file           "~/.mpd/pid"
state_file         "~/.mpd/state"
sticker_file       "~/.mpd/sticker.sql"

# uncomment pulse audio section
audio_output {
	type		"pulse"
	name		"My Pulse Output"
}
#+END_EXAMPLE

Start mpd by:
#+BEGIN_EXAMPLE
systemctl --user start mpd
systemctl --user enable mpd
#+END_EXAMPLE

The client cantata can be used to create list. stumpwm-contrib has a
mpd client. mpc is a command line client.


** fontforge
How I made the WenQuanYi Micro Hei ttf font (clx-truetype only
recognizes ttf, not ttc):

- input: ttc file
- Tool: fontforge

Open ttc file, select one, generate font, choose truetype
The validation failed, but doesn't matter

** tmux
#+BEGIN_SRC shell
# start a new session, with the session name set to "helium"
tmux new -s helium
# attach, and the target is "helium"
tmux a -t helium
#+END_SRC


Some default commands (all after prefix key):
- !: break the current pane into another window
- =:=: prompt command
- q: briefly display pane index (1,2,etc)


Commands
- select-layout even-horizontal: balance window horizontally
- last-window: jump to last active window
- new-window
- detach

* Window System

** xkill
Kill all Xorg instances
#+begin_example
pkill -15 Xorg
#+end_example

If using kill:
#+begin_example
ps -ef | grep Xorg # find the pid
kill -9 <PID>
#+end_example

The xkill is not working properly, giving me "unable to find display"
error.

** Display Manager
Install xdm. It will use the file =$HOME/.xsession=, so
#+BEGIN_EXAMPLE
ln -s $HOME/.xinitrc $HOME/.xsession
#+END_EXAMPLE

Change default desktop environment:
- GNome: gdm
- KDE: kdm
- lxfe: lightdm

Change (three approaches):
1. edit =/etc/X11/default-display-manager=: I think we'd better use update-alternative
2. =sudo dpkg-reconfigure gdm=
3. =update-alternatives --config x-window-manage=
** screen

Multi screen, stumpwm detect as one.  Install =xdpyinfo=. It is used
to detect the heads.

check the screen resolution:
#+BEGIN_EXAMPLE
xdpyinfo | grep -B 2 resolution
#+END_EXAMPLE

Multiple Display:

#+BEGIN_EXAMPLE
# Mirror display
sudo xrandr --output HDMI-2 --same-as eDP-1
sudo xrandr --output HDMI-2 --off
#+END_EXAMPLE

Rotate
#+BEGIN_EXAMPLE
xrandr --output HDMI-1 --rotate left
#+END_EXAMPLE

Chagne resolution
#+BEGIN_EXAMPLE
xrandr --output HDMI-1 --mode 1920x1080
#+END_EXAMPLE

** cursor
Install xcursor-themes:
#+BEGIN_EXAMPLE
aptitude install xcursor-themes
aptitude show xcursor-themes # here it will output the themes name
#+END_EXAMPLE

In =.Xresources=:
#+BEGIN_EXAMPLE
Xcursor.theme: redglass
#+END_EXAMPLE

** Natural Scrolling

The old solution is to swap the pointer button "4" and "5", by
=xmodmap= or =xinput=:

#+BEGIN_EXAMPLE
xmodmap -e "pointer = 1 2 3 4 5"
xinput --set-button-map 10 1 2 3 5 4
#+END_EXAMPLE

The 10 is the id, to find it out, run xinput without argument.

But this way is deprecated, as of chromium 49 and above, it does not work any more.
So use the xinput way to /set the property/:

#+BEGIN_EXAMPLE
xinput set-prop 10 "libinput Natural Scrolling Enabled" 1
#+END_EXAMPLE

I'm using logitech G900 and the property might be different. It works!

Not sure if the xinput command should be run each time the system
boots. That would be hard for specifying ID.

The detail is, you can do this:

#+BEGIN_EXAMPLE
xinput # show a list of devices
xinput list-props <ID> # list of properties
xinput set-prop <deviceID> <propID> <value>
#+END_EXAMPLE

** ratpoison

This is actually a wonderful WM.  To start:

#+BEGIN_EXAMPLE
aptitude install ratpoison
#+END_EXAMPLE

In =.xinitrc=:

#+BEGIN_EXAMPLE
exec ratpoison
#+END_EXAMPLE

- =C-t ?= to show the help

actually =C-t= is the prefix of every command, =C-g= to abort.
- =C-t :=: type command
- =C-t !=: run shell command
- =C-t .=: open menu
- =C-t c=: open terminal


HOWEVER, this is pretty old, and it cause the screen to go brighter
and darker back and force.  Fortunately the stumpwm is very like this
one, but
1. actively maintained on github.
2. written in common lisp



* System Management
** Power Management
Power management is done through =systmed= can handle it, by =acpid=.
The configure file is =/etc/systemd/logind.conf=.  =man logind.conf=
for details.  /hibernate/ will save to disk, while /suspend/ save to
ram.  Both of them will resume to the current status.

#+BEGIN_EXAMPLE
HandlePowerKey=hibernate
HandleLidSwitch=suspend
#+END_EXAMPLE

** Booting

The grub2 menu configure file is located at =/boot/grub/grub.cfg=.  It
is generated by =/usr/sbin/update-grub= (8) using templates from
=/etc/grub.d/*= and settings from =/etc/default/grub=.

The default run level is 2 (multi-user mode), corresponding to
=/etc/rc2.d/XXX= scripts. Those scripts starts with "S" or "K" meaning
=start= or =stop= sent to =systemd= utility.  Those scripts are symbol
linked to =../init.d/xxx=.  By default there's no difference between
level 2 to 5. Run level 0 means half, S means single user mode, 6
means reboot.

** User Management
The account will use the values on command line, *plus* the default
value for system. A group will also be created by default.

- =-g GROUP=: specify the initial login group. Typically *just ignore*
  this, the default value will be used.
- =-G group1,group2,...=: additional groups. You might want: =video=,
  =audio=, =wheel=
- =-m=: create home if it does not exists
- =-s SHELL=: use this shell. Typically just ignore this, the system
  will choose for you.

** File Management

*** Swap File

A swap file can also be used as swap memory. When doing linking, the
=ld= might fail because of lack of memory.

Check the current swap:
#+BEGIN_EXAMPLE
swapon -s
#+END_EXAMPLE

Create swap file:
#+BEGIN_EXAMPLE
dd if=/dev/zero of=/path/to/extraswap bs=1M count=4096
mkswap /path/to/extraswap
#+END_EXAMPLE

#+BEGIN_EXAMPLE
swapon /path/to/extraswap
swapoff /path/to/extraswap
#+END_EXAMPLE

This will not be in effect after reboot. To automatically swap it on, in =/etc/fstab=
#+BEGIN_EXAMPLE
/path/to/extraswap none swap sw 0 0
#+END_EXAMPLE
*** Back Up & Syncing

=rsync= commnad is used to sync from source to destination. It does
not perform double way transfer. It decides a change if either of
these happens:
- size change
- last-modified time

*** MIME
check the MIME of a file.
#+BEGIN_EXAMPLE
file --mime /path/to/file
#+END_EXAMPLE

On debian, the mapping from suffix to MIME type is =/etc/mime.types=.

Create default application for =xdg-open=
#+BEGIN_EXAMPLE
mkdir ~/.local/share/applications
xdg-mime default firefox.desktop application/pdf
#+END_EXAMPLE

~/.local/share/applications/mimeapps.list
#+BEGIN_EXAMPLE
[Default Applications]
application/pdf=firefox-esr.desktop
#+END_EXAMPLE

=/usr/share/applications/*.desktop= are files define for each
application.

On Debian, you can also do this:
#+BEGIN_EXAMPLE
update-alternative --config x-terminal-emulator
update-alternative --config x-www-browser
#+END_EXAMPLE




* Arch Linux
** Installation


*** Verify UEFI
Nowadays (start from 2017) Arch only supports 64 bits ... and seems to
prefer UEFI .. Fine

First, verify the boot mode to be UEFI by checking
the following folder exists
#+BEGIN_EXAMPLE
ls /sys/firmware/efi/efivars
#+END_EXAMPLE

*** System clock
#+BEGIN_EXAMPLE
timedatectl set-ntp true
#+END_EXAMPLE

*** Partition
#+BEGIN_EXAMPLE
parted /dev/sda mklabel gpt
parted /dev/sda mkpart ESP fat32 1MiB 513MiB
parted /dev/sda set 1 boot on
parted /dev/sda mkpart primary linux-swap 513MiB 5GiB
parted /dev/sda mkpart primary ext4 5GiB 100%
#+END_EXAMPLE

This creates
- sda1 :: =/boot= the EFI System Partition (ESP), swp, and a root
- sda2 :: swap
- sda3 :: =/=

Format:
#+BEGIN_EXAMPLE
mkfs.fat -F32 /dev/sda1
mkfs.ext4 /dev/sda3
#+END_EXAMPLE

Mount
#+BEGIN_EXAMPLE
mount /dev/sda3 /mnt
mkdir /mnt/boot
mount /dev/sda1 /mnt/boot
#+END_EXAMPLE


*** Select mirror
look into =/etc/pacman.d/mirrorlist= and modify if necessary. The order
matters. The file will be copied to new system.

*** Install base system
#+BEGIN_EXAMPLE
pacstrap /mnt base
#+END_EXAMPLE

*** chroot
#+BEGIN_EXAMPLE
genfstab -U /mnt >> /mnt/etc/fstab
arch-chroot /mnt
#+END_EXAMPLE

*** Configure
Now we are in the new system.

#+BEGIN_EXAMPLE
ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime
hwclock --systohc
#+END_EXAMPLE

Uncomment =en_US.UTF-8 UTF-8= inside =/etc/locale.gen= and run
#+BEGIN_EXAMPLE
locale-gen
#+END_EXAMPLE

Set =LANG= in =/etc/locale.conf=

#+BEGIN_EXAMPLE
LANG=en_US.UTF-8
#+END_EXAMPLE

Set hostname in =/etc/hostname=
#+BEGIN_EXAMPLE
myhostname
#+END_EXAMPLE

Set root password
#+BEGIN_EXAMPLE
passwd
#+END_EXAMPLE

Install grub
#+BEGIN_EXAMPLE
pacman -S grub efibootmgr
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=myarch
grub-mkconfig -o /boot/grub/grub.cfg
#+END_EXAMPLE

Before reboot, it is good to make sure the network will work, by
installing some networking packages:
- =dialog=
- =wpa_suppliant=
- =iw=

Now reboot


*** Config
Install the packages, and config the system using my scripts:
- setup-quicklisp
- setup-git


*** Dual boot with Windows
The only difference is that, you do not need to create the EFI boot
partition, but use the existing one. Just mount it to boot. The rest
is the same.

** Pacman
Option
- S :: sync, a.k.a install
- Q :: query

Parameter:
- s :: search
- y :: fetch new package list. Usually use with =u=
- u :: update all packages
- i :: more information
- l :: location of files

Typical usage:
- Syu :: update whole system
- S :: install package
- R :: remove package
- Rs :: remove package and its unused dependencies
- Ss :: search package
- Qi :: show description of a package

- --noconfirm :: use in script
- --needed :: do not install the installed again

Pacman will store all previously downloaded packages. So when you find
your /var/cache/pacman so big, consider clean them up using:

#+BEGIN_EXAMPLE
paccache -rk 1
#+END_EXAMPLE

** AUR
Have to search through its web interface. Find the git download link
and clone it. It is pullable.

Go into the folder and
#+BEGIN_EXAMPLE
makepkg -si
#+END_EXAMPLE

=-s= alone will build it, with =i= to install it after build. The
dependencies are automatically installed if can be found by pacman. If
it is also on AUR, you have to install manually.

The md5sum line can be skipped for some package. Just replace the
md5sum value inside the quotes with ='SKIP'=.

* CentOS
On installing a new instance of CentOS, issue the following commands:

#+BEGIN_SRC shell
# check the sshd status
# should use opensshd
service status sshd
# add user, -m means create home folder
useradd -m myname
# oh, wait, I forget to add myself to wheel
# -a means append, if no -a, the -G will accept a comma separated list, overwrite the previous setting
usermod -aG wheel myname
#+END_SRC

* Debian

** Package
- =/etc/apt/sources.list=
- =/var/cache/apt/archives/=

=netselect-apt= to select the fastest source!

dist-upgrade
#+BEGIN_SRC sh
cp /etc/apt/sources.list{,.bak}
sed -i -e 's/ \(stable\|wheezy\)/ testing/ig' /etc/apt/sources.list
apt-get update
apt-get --download-only dist-upgrade
# Dangerous
apt-get dist-upgrade
#+END_SRC

- =dpkg-reconfigure= reconfigure a installed package
- =defconf-show= show the current configuration of a package

Another part is the =main=.  If you want some 3rd party contributor
packages, add =contrib= after =main=.  If you further want some
non-free packages, add also =non-free=.


** Configuration
*** update-alternatives
Options:
- =--config=: show options and select configuration interactively
- =--display=: show the options

Some examples:
- =update-alternatives --config desktop-background=


* Windows
- Check CPU and GPU status and temperature: http://cpuid.com
- Monitoring system status: MSI Afterburner


The alfred for windows, open source!
- wox

They have plugins, for example the google translate plugin.
But it is awkward to use: =tr en zh hello=

** AutoHotKeys

Right click and create new "AutoHotKey script".

Edit that script:

Rotate.ahk:
#+BEGIN_EXAMPLE
#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
; #Warn  ; Enable warnings to assist with detecting common errors.
SendMode Input  ; Recommended for new scripts due to its superior speed and reliability.
SetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.

; this is a comment
; #n::Run Notepad

; normal rotation
#n::Run D:\tools\display.exe /rotate:0
; portrait rotation
#m::Run D:\tools\display.exe /rotate:90
#+END_EXAMPLE

[[http://noeld.com/programs.asp#Display][=display.exe=]] is a command line tool to change orientation.

Double click to enable it. Change the content and run it again to replace old configure.

** Wake Timer

My computer wake up 10 secs after I asked it to sleep, and I want to know why.
Use this command:

#+BEGIN_EXAMPLE
powercfg -lastwake
#+END_EXAMPLE

The output shows the type of wakeup is /Wake Timer/ and source is =VBoxSVC.exe=.

Solution:
power setting -> advanced setting -> more advanced setting -> sleep -> allow wake timers -> disable


** Partition Management
When deleting recovery partition of the second hard disk, you cannot
simply delete it. You need to search and open =diskpart=, then run

#+BEGIN_EXAMPLE
list partition
select partition 1
list volume
list partition
select partition 0
delete partition
#+END_EXAMPLE

this might fail with "cannot delete a protected partition without the
force protected parameter". Then you need:

#+BEGIN_EXAMPLE
delete partition override
#+END_EXAMPLE




* Trouble Shooting
** Cannot su root
When su cannot change to root, run
#+BEGIN_EXAMPLE
chmod u+s /bin/su
#+END_EXAMPLE

** in docker, cannot open chromium
#+BEGIN_QUOTE
failed to move to new namespace: PID namespaces supported, Network
namespace supported, but failed: errno = Operation not permitted.
#+END_QUOTE

Solution
#+BEGIN_EXAMPLE
chromium --no-sandbox
#+END_EXAMPLE
** Encoding
When converting MS windows format to unix format, you can use emacs
and call =set-buffer-file-coding-system= and set to unix.  Or you can
use =dos2unix=, perhaps by

#+BEGIN_EXAMPLE
find . -name *.java | xargs dos2unix
#+END_EXAMPLE

** Cannot open shared library

On =CentOS=, the default =LD_LIBRARY_PATH= does not contains the
=/usr/local/lib=.  The consequence is the =-lpugi= and =-lctags= are
not recognized because they are put in that directory.  Set it, or
edit =/etc/ld.conf.d/local.conf= and add the path.  After that, run
=ldconf= as root to update the database.


** auto expansion error for latex font
when compiling latex using acmart template, auto expansion error is
reported.

Solution:
#+BEGIN_EXAMPLE
mktexlsr # texhash
updmap-sys
#+END_EXAMPLE

Reference: https://github.com/borisveytsman/acmart/issues/95

** time not up-to-date
Although I set the right timezone (check by =timedatectl=), the clock
is still incorrect. To fix that, install =ntp= package and run

#+BEGIN_EXAMPLE
sudo ntpd -qg
#+END_EXAMPLE

** backlight on TP25
For regular laptops, using debian

#+BEGIN_EXAMPLE
cat /sys/class/backlight/intel_backlight/max_brightness
cat /sys/class/backlight/intel_backlight/brightness

echo 400 > /sys/class/backlight/intel_backlight/brightness
#+END_EXAMPLE

But on Archlinux, on TP25, The =xorg-xbacklight= is not working. The
drop-in replacement =acpilight= (aur) does.

To setup for video group users to adjust backlight, place a file
=/etc/udev/rules.d/90-backlight.rules=

#+begin_example
SUBSYSTEM=="backlight", ACTION=="add", \
  RUN+="/bin/chgrp video %S%p/brightness", \
  RUN+="/bin/chmod g+w %S%p/brightness"
#+end_example

The command is still =xbacklight=.
** xinit won't start

On Debian, when I =dist-upgrade= Debian 8 Jessie to 9 Stretch,
the =startx= stop working.
I try install a Debian 9 from its own image, and still the same result.
The error message says:
#+BEGIN_QUOTE
vesa cannot read int vect
screen found but none leave a usable configuration
xf86enableioports failed to set iopl for i/o
#+END_QUOTE

The trick is you need:
#+BEGIN_EXAMPLE
chomd u+s /usr/bin/xinit
#+END_EXAMPLE
