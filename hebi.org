#+TITLE: Hebi

* stack
** TODO [#A] 572 lab 2
** TODO s.el, dash.el
** TODO qi's macbook
** DONE [#A] write up the risks!
   DEADLINE: <2016-10-03 Mon>
** TODO wiki KMP search algorithm in lisp
** TODO stronglift 5x5 for org mode to appear on wiki
** TODO reftex, org mode, default bibliography 1. don't need to set 2. easy to export to one file
* TODO Open Source Ideas
** TODO pdf-tools
*** TODO two column view
*** TODO show citation on-the-fly


* Research
** TODO What is dynamic symbolic execution?
** TODO CCured
** TODO DART
** TODO CUTE
** TODO dynamic symbolic execution for invariant inference, ICSE 08

* wiki
** TODO [#C] remove all Chinese in wiki
** TODO leetcode write-up, possibly write using lisp!

* Other
** TODO color theme

* Languages
** TODO lua
** TODO Scala
** TODO OpenGL
** TODO CUDA
** TODO haskell


* TODO Research into these
** TODO [#C] BeOS Haiku

* TODO C++ Staff
** TODO gdb C debugging
** TODO [#C] c++ stream & iterator
** TODO [#C] C++ template in depth
** TODO [#C] move semantic
** TODO [#C] perfect forwarding
** TODO [#C] forward iterator
** TODO [#C] template
** TODO [#C] unordered_set bucket

* TODO lisp
** TODO [#C] clojure
** TODO [#C] common lisp


* TODO Helium
** TODO Input Output Data format unify
** TODO Oracle for buffer overflow really working
** TODO Invariant selection & validation with successfully runs
** TODO bug studies
** TODO More concrete details for the risks
** TODO AST generate code: not only selected


* TODO Old Wiki Migration
There're some pages not migrated from old wiki:
- [ ] =leetcode=
- [ ] =633/=
- [ ] =crypto/=
- [ ] =compiler/=
- [ ] =java/=
- [ ] =coffee/=
- [ ] =ruby=
- [ ] =python/=
- [ ] =operating-system/=
- [ ] =math/=
- [ ] =scholar/=
- [ ] =database/=
- [ ] =docker/=
- [ ] =platform/=
- [ ] =software/=
- [ ] =web/=

#+BEGIN_HTML html
<blockquote id="quote">
</blockquote>

<script>
var i = Math.round(Math.random()*100);
var quotes = [
"你一出场别人都显得不过如此",
"你必须非常努力，才能看起来毫不费力",
"我命由我不由天",
"好运对爱笑的人情有独钟",
"成功路上，非死即伤，但别妄想我举手投降",
"我的影子想要去飞翔,我的人还在地上",
"我的脚步想要去流浪,我的心却想靠航"
];
document.getElementById("quote").innerHTML = quotes[i % quotes.length];
</script>
#+END_HTML


* People!
** Peter Norvig
http://www.norvig.com/

- hear about he uses lisp
- second author of AI modern approach book

** Magnar Sveen
https://github.com/magnars
- library: [[https://github.com/magnars/dash.el][dash.el]], [[https://github.com/magnars/s.el][s.el]]
- package: [[https://github.com/magnars/multiple-cursors.el][multiple-cursors.el]], [[https://github.com/magnars/expand-region.el][expand-region.el]], [[https://github.com/magnars/stasis][stasis]]
- website: [[https://github.com/magnars/emacsrocks.com][emacsrocks.com]]
** Harry Xu

* Knowledge Place
Testing systems are typically evaluated using three metrics cite:2014-ESE-Avgerinos
1. number of real bugs found
2. node coverage (stmt coverage, finite)
3. path coverage (infinite, need approximate)

* Links
Some git repos
- https://github.com/mxgmn/WaveFunctionCollapse
- https://github.com/google/lisp-koans

* Advice
** About interruption
From https://jaxenter.com/aaaand-gone-true-cost-interruptions-128741.html
#+BEGIN_QUOTE
When you’re operating on the maker’s schedule, meetings are a disaster.
A single meeting can blow a whole afternoon, by breaking it into two pieces each too small to do anything hard in.
Plus you have to remember to go to the meeting. That’s no problem for someone on the manager’s schedule.
There’s always something coming on the next hour; the only question is what.
But when someone on the maker’s schedule has a meeting, they have to think about it.

I find one meeting can sometimes affect a whole day.
A meeting commonly blows at least half a day, by breaking up a morning or afternoon.
But in addition there’s sometimes a cascading effect.
If I know the afternoon is going to be broken up, I’m slightly less likely to start something ambitious in the morning.
I know this may sound oversensitive, but if you’re a maker, think of your own case.
Don’t your spirits rise at the thought of having an entire day free to work, with no appointments at all? Well, that means your spirits are correspondingly depressed when you don’t.
And ambitious projects are by definition close to the limits of your capacity. A small decrease in morale is enough to kill them off.

Working late at night might sound like a good idea because there are no (or at least less) interruptions but even programmers need to sleep if they want to avoid burnout.
#+END_QUOTE


From https://www.reddit.com/r/programming/comments/4zp5dt/the_true_cost_of_interruptions_game_developer/:

#+BEGIN_QUOTE
Developers don't try to do hard things when an interruption is impending.

Honestly it's one reason I like instant messaging, whether individual or in a group conversation (IRC, Slack, etc.).
I can see a notification out of the corner of my eye, but it doesn't have the same urgency to respond as, say, a phone call.
At a minimum it lets me complete the thought (e.g. finish writing a paragraph) before I look at the message.

It's also a reason to appreciate working remotely. Nobody "just happens to stop by my desk."
#+END_QUOTE

bibliography:/home/hebi/github/bibliography/hebi.bib

* Task Log
** DONE [#A] 342 midterm solution
** DONE elisp regular expression
** DONE EXPECT_EQ snippet
** DONE time control within emacs (TODO, deadline management)
** DONE 572 homework lab

